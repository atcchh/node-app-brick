// 检查特定目录下文件是否存在
// 如果哦不存在，创建文件
// 检查文件的内容，
// 获取最后一行的内容
// 如果没有：新建一条记录
// 如果有：按照时间解析
// 系统:::创建时间:::最后一次登录时间:::cookie值
// www.lufax.com:::1397711895251::::::adfasdfasdfasdfadfasdfadf
// 判断时间:是否在6小时内
// 如果在，访问https://user.lufax.com/user/keepSession.gif?timestamp=1397697642842
// 如果不再，在重新登录，创建cookie，
var fs = require('fs');
var http = require('http');
var https = require('https');

var parseCookies = require('cookie');
var Path = require('path');

var lufaxConfigFile = '/tmp/lufax.conf';
// 检查特定目录下文件是否存在
if(!fs.existsSync(lufaxConfigFile)) {
	fs.writeFileSync(lufaxConfigFile,'');
}


fs.readFile(lufaxConfigFile, 'utf-8', function(err, data) {
	if (err) throw err;
	var lines = data.trim().split('\n');
	var lastLine = lines.slice(-1)[0];
	if(isCreateNewCookie(lastLine)) {
/////////////////////////////////////
		https.get("https://user.lufax.com/user/captcha/captcha.jpg?source=login&_=" + new Date().getTime(), function(res) {
		//http.get("http://www.lufax.com", function(res) {
		  console.log("Got response: " + res.statusCode);
		  console.log(res.headers['set-cookie']);
		  var imvc = getCookie(res,'IMVC');
		  var buffer = new Buffer(0, 'binary');
		  res.on('data', function (chunk) {
			buffer = Buffer.concat([buffer, new Buffer(chunk,'binary')])
		  });
		  res.on('end', function(){
			fs.writeFile( imvc +'.png',buffer, function() {
				console.log('create the file' + imvc + '.png success');
				upload('api.ruokuai.com','/create.json',{
				'username': 'test10002',
				'password': '2F4EFC577084BB20B8C30D38F6458A27',
				'typeid':'3040',
				'softid': '6865',
				'softkey': 'c009a96f01a622653fea46e324a3d4ce'
				},
				imvc +'.png', function(data) {
					console.log('000000000000000000000000000000000');
					var jsonData = JSON.parse(data);
					console.log(jsonData.Result);
					// login www.lufax.com
					var optionsLogin = {
						'host':"user.lufax.com",//远端服务器域名
						'port':443,//远端服务器端口号
						'method':'POST',
						'path':'/user/login',//上传服务路径
						'headers':{
							'Content-Type':'application/x-www-form-urlencoded',
							'Connection':'keep-alive',
							'Cookie':'IMVC='+imvc
						}
					};
					console.log("start to login");
					console.log(optionsLogin);
					var loginRequest = https.request(optionsLogin, function(loginResponse){
						console.log("login success");
						_lufaxSID = getCookie(loginResponse,'_lufaxSID');
						console.log(_lufaxSID);
						fs.appendFileSync(lufaxConfigFile,'www.lufax.com:::'+new Date().getTime() + ':::'+new Date().getTime() + ':::' + _lufaxSID + '\n');
						console.log('create lufax succes');
					});
					loginRequest.write('');
					loginRequest.end('password=830A5C7ED170D32979DD9904C8DC0F6D3E6477B5B3CD83686BA069B406ECCB311E065E700A5F0EC2AD5C8009AB4C79833D4579DC4657752758CF793F9D12FD56A60196B68E71850D1493B64053168C3A6C983F53290929AE1E7B85E5D6DC3FB8F010F518526B790F31AF52C9B845189EA44A690D809B2B33C77697E6EDCD0E2B&userNameLogin=oneforce&pwd=************&validNum='+jsonData.Result);
		//'password=830A5C7ED170D32979DD9904C8DC0F6D3E6477B5B3CD83686BA069B406ECCB311E065E700A5F0EC2AD5C8009AB4C79833D4579DC4657752758CF793F9D12FD56A60196B68E71850D1493B64053168C3A6C983F53290929AE1E7B85E5D6DC3FB8F010F518526B790F31AF52C9B845189EA44A690D809B2B33C77697E6EDCD0E2B&userNameLogin=oneforce&pwd=************&validNum='+jsonData.Result
				});

			});	
		  });
		}).on('error', function(e) {
		  console.log("Got error: " + e.message);
		});


		var getCookie = function(response, cookieName) {
			var cookies = response.headers['set-cookie'];
			for(var index =0; index < cookies.length; index++) {

				var cookie = parseCookies.parse(cookies[index]);
				if(cookie[cookieName]) {
					return cookie[cookieName];
				}
			}
			return null;

		}

		function upload(host, path, data, filePath, callback){
			fs.stat(filePath, function(err, stat){
				var boundaryKey = '----' + new Date().getTime() ;
				var tempData = '';
				for( var temp in data) {
					tempData +=         '--' + boundaryKey + '\r\n' ;
					tempData +=         'Content-Disposition: form-data; name="'+ temp + '"\r\n\r\n' 
					tempData +=         data[temp] + '\r\n';
				}
				var fileName = Path.basename(filePath);

				tempData += '--' + boundaryKey + '\r\n' +
					'Content-Disposition: form-data; name="image"; filename="' + filePath + '"\r\n' +
					'Content-Type: image/png\r\n\r\n'
				var buffer = new Buffer(tempData + '\r\n--' + boundaryKey + '--');
				var options = {
					'host':host,//远端服务器域名
					'port':80,//远端服务器端口号
					'method':'POST',
					'path':path,//上传服务路径
					'headers':{
						'Content-Type':'multipart/form-data; boundary=' + boundaryKey,
						'Connection':'keep-alive',
						'Content-Length':buffer.length + stat.size
					}
				};
				    var req = http.request(options,function(res){
					res.setEncoding('utf8');
					var dataChunk = '';
					res.on('data', function (chunk) {
						console.log(chunk);
						dataChunk+=chunk;
					});
					res.on('end',function(){
						console.log('captch end event');
						if(callback) {
							callback(dataChunk);
						}
					});
					// add the error info
				    });

				    req.write(tempData);
				    //设置1M的缓冲区
				    var fileStream = fs.createReadStream(filePath,{bufferSize:1024 * 10});

				    fileStream.pipe(req,{end:false});
				    fileStream.on('end',function(){
					console.log('file end event start');
					req.end('\r\n--' + boundaryKey + '--');
				    });
			});
		   
		}
/////////////////////////////////////


	} else {
		// update the keep session.gif
		var lufaxSID = lastLine.split(':::')[3];
		var createTime = lastLine.split(':::')[1];
		var keepSessionRequest = https.request({'host':'user.lufax.com',//远端服务器域名
			'port':443,//远端服务器端口号
			'method':'GET',
			'path':'/user/keepSession.gif',//
			'headers':{
				'Connection':'keep-alive',
				'Cookie':'_lufaxSID="' + lufaxSID + '"'
			}}, function(keepSessionResponse){
				console.log(lufaxSID);
				fs.appendFileSync(lufaxConfigFile,'www.lufax.com:::'+createTime + ':::'+new Date().getTime() + ':::' + lufaxSID + '\n');
				console.log('keep session succes');
			});
		keepSessionRequest.end();
	}
});

var isCreateNewCookie = function(line) {
	if(!line) {
		return true;
	}
	var field = line.split(':::');
	var createTime = field[1];
	var lastUpdateTime = field[2];
	if(new Date().getTime() - createTime > 6 * 60 * 60 * 1000) {
		return true;
	} else 	if(new Date().getTime() - createTime > 10 * 60 * 1000) {
		return true;
	} else {
		return false;
	}
}
