// 检查特定目录下文件是否存在
// 如果哦不存在，创建文件
// 检查文件的内容，
// 获取最后一行的内容
// 如果没有：新建一条记录
// 如果有：按照时间解析
// 系统:::创建时间:::最后一次登录时间:::cookie值
// www.lufax.com:::1397711895251::::::adfasdfasdfasdfadfasdfadf
// 判断时间:是否在6小时内
// 如果在，访问https://user.lufax.com/user/keepSession.gif?timestamp=1397697642842
// 如果不再，在重新登录，创建cookie，
var fs = require('fs');
var http = require('http');
var https = require('https');

var parseCookies = require('cookie');
var Path = require('path');
var Q = require('q');
var URL = require('url');

var lufaxConfigFile = '/tmp/lufax.conf';
var prefixIMVC = '/tmp/imvc/';
// 检查特定目录下文件是否存在
if(!fs.existsSync(lufaxConfigFile)) {
	fs.writeFileSync(lufaxConfigFile,'');
}

var readLastLine = function(fileName, encode) {
	var deferred = Q.defer();
	if(!fileName){
		deferred.reject(new Error('The fileName is empty'));			
	} else {
		fs.readFile(fileName, encode?encode:'utf-8', function(err, data) {
			if (error) {
				deferred.reject(new Error(error));
			} else {
				var lines = data.trim().split('\n');
				var lastLine = lines.slice(-1)[0];
				deferred.resolve(lastLine);
			}
		});
	}
	return deferred.promise;
}


var restFul = function(urlString, method, data) {
	var deferred = Q.defer();
	var url = URL.parse(urlString);
	var options = {
		hostname: url.hostname,
		port: url.protocol === 'http:'? 80:443,
		path: url.path,
		method: method,
		headers:{
			'Content-Type': 'application/json; charset=utf-8',
			'Accept': 'application/json',
			'Connection':'close',
			'Accept-Encoding': 'gzip,deflate,sdch',
			'Accept-Language': 'en-US,en;q=0.8'
		}
	};
	var protocol = (url.protocol === 'http:'? http:https);
	var req = protocol.request(options, function(res) {
		if(res.statusCode != 200){
			deferred.reject(new Error('visit [' + method + '--->'+urlString + ']  response  status is [' + res.statusCode + '], please check it'));
			return;
		} 

		res.setEncoding('utf8');
		var buffer = '';
		res.on('data', function (chunk) {
			buffer += chunk;
		});
		try {
			res.on('end', function () {
				deferred.resolve(JSON.parse(buffer));
			});
		} catch(e) {
			console.log(e);
			deferred.reject(new Error(e));
		}	
	});

	req.on('error', function(e) {
		console.log(e);
		console.log('-----------------------');
		console.log(e);
		deferred.reject(new Error(e));
	});

	// write data to request body
	var responseData = '';
	if(data) {
		for(var a in data) {
			responseData += '&'+ encodeURIComponent(a)+'='+encodeURIComponent(data.a);
		}
	}
	req.end();
	return deferred.promise;
}


var param = {};
param.password='6EE9C87756684E928ACB35AA280E56142933A8B897036DEEE6CDB9CD9BF93AE0B6459E565768BB8ED97532E9D0B5FF6339C5761EE1AF686D95EF0EFF9DC2F0B93818C2D82D0F7C9345A81880F841229DD2C7B65FFEFD809E33EA63E5BC026F210D620A62FD5BFB01225AC0511E69A548385ADEB1F97424B47818EE6133FCC1B4';
param.userNameLogin='oneforce';
param.pwd='************';
param.validNum='r3ct';
restFul('https://user.lufax.com/user/login','POST', param).then(function(data){
	console.log(data);
}, function(e){
	console.log(e);
});;


restFul('http://www.lufax.com/list/service/news/sidebar-news','GET', param).then(function(data){
	console.log(data);
}, function(e){
	console.log(e);
});;
